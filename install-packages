#!/bin/bash

PACKAGES="tree gnupg ninja-build gettext libtool libtool-bin autoconf automake
cmake g++ pkg-config unzip curl doxygen rustc rust-src"
MASON_PACKAGES="rust-analyzer codelldb"

GIT_USER="Quminouse"
GIT_EMAIL="jacksonpegg01@outlook.com"

#Make downloads folder
DOWNLOADS=~/Downloads
if [ ! -d "$DOWNLOADS" ]; then
	mkdir "$DOWNLOADS"
fi

#Install github cli
if ! command -v gh &> /dev/null; then
    type -p curl >/dev/null || sudo apt install curl -y
    curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
    && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
    && sudo apt update \
    && sudo apt install gh -y
fi

#Auth if not already authenticated and add default git credentials
if ! gh auth status >/dev/null 2>&1; then
    gh auth login
    git config --global user.email = "$GIT_USER"
    git config --global user.name = "$GIT_EMAIL"
fi

#Install packages
to_install=""
for package in $PACKAGES; do
    PKG_OK=$(dpkg-query -W --showformat='${Status}\n' \
        $package|grep "install ok installed")
    if [ "" = "$PKG_OK" ]; then
        to_install="$to_install package"
    fi
done

#Update packages and autoremove
if [ "" != "$to_install" ]; then 
    sudo apt-get install "$to_install"
    sudo apt --quiet update
    sudo apt --quiet upgrade -y
    sudo apt --quiet autoremove -y
fi

#Install neovim
NVIM_PATH=~/Downloads/neovim
if ! command -v nvim &> /dev/null; then
    if [ ! -d "$NVIM_PATH" ]; then
	    git clone https://github.com/neovim/neovim "$NVIM_PATH"
    fi
    cd "$NVIM_PATH" && make CMAKE_BUILD_TYPE=Release
    sudo make --quiet install && cd ~ && export PATH=$PATH:"$NVIM_PATH"/build/bin/nvim \
	    && echo 'export PATH=$PATH:~/Downloads/neovim/build/bin/nvim' >> ~/.bashrc
fi

#Install nvim package manager
file_path=~/.local/share/nvim/site/pack/packer/start/packer.nvim
if [ ! -e "$file_path" ]; then
	git clone --depth 1 https://github.com/wbthomason/packer.nvim "$file_path"
fi

#Clone nvim config from github
file_path=~/.config/nvim/
if [ ! -d "$file_path" ]; then
	git clone --depth 1 https://github.com/Quminouse/qvim "$file_path"
fi

#Install nvim packages
nvim --headless -c "PackerInstall" -c qa

#Install mason packages
file_path=~/.local/share/nvim/mason/packages
for package in $MASON_PACKAGES; do
    if [ ! -d "$file_path/$package" ]; then
        nvim --headless -c "MasonInstall $package" -c qa
    fi
done
